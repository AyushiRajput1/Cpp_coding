class Solution {
public:
    bool findTarget(TreeNode* root, int k) 
    {
        vector<int> v;
        queue<TreeNode*> q;
        q.push(root);

        while(!q.empty())
        {
            TreeNode *t=q.front();
            v.push_back(t->val);
            q.pop();
            
            if(t->left)
                q.push(t->left);
            if(t->right)
                q.push(t->right);         
        }

        for(int i=0;i<v.size();i++)
        {
            int x=v[i];
                for(int j=0;j<v.size();j++)
                {
                    if(x+v[j]==k && i!=j)
                        return true;
                }

        }
        return false;
    }
};
-----------------------
class Solution {
public:
    bool findTarget(TreeNode* root, int k) 
    {
        vector<int> v;
        queue<TreeNode*> q;
        q.push(root);

        while(!q.empty())
        {
            TreeNode *t=q.front();
            v.push_back(t->val);
            q.pop();
            
            if(t->left)
                q.push(t->left);
            if(t->right)
                q.push(t->right);         
        }
        sort(v.begin(),v.end());
        int j=v.size()-1;
            int i=0;

        while(i<j)
        {
            if(v[i]+v[j]==k)
                return true;
            if(v[i]+v[j] < k)
                i++;
            else
                j--;
        }
        return false;
    }
};