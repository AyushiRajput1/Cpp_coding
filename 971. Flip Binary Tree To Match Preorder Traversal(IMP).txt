class Solution {
public:
 int index=0;
 vector<int>res;

    bool func(TreeNode* root, vector<int>& voyage)
    {
        if(root==NULL)
            return true;
        if(root->val!=voyage[index++])
            return false;
        if(root->left!=NULL && root->left->val!=voyage[index])
        {
            res.push_back(root->val);
            return (func(root->right,voyage) && func(root->left,voyage));
        }  
        return (func(root->left,voyage) && func(root->right,voyage));  
    }
    
    vector<int> flipMatchVoyage(TreeNode* root, vector<int>& voyage) 
    {
        
        if(func(root,voyage))
            return res;
            
       return {-1};
    }
};