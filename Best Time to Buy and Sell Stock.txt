#include <bits/stdc++.h> 
//O(N*N)

int maximumProfit(vector<int> &prices)
{
    int p=0;
    for(int i=0;i<prices.size();i++)
    {
        for(int j=i+1;j<prices.size();j++)
        {
            if(prices[i]<prices[j])
            {
                p=max(p,prices[j]-prices[i]);
                //cout<<prices[i]<<" "<<prices[j]<<" "<<p<<endl;
            }
        }
    }
    return p;
}

//O(N)
//O(1)

#include <bits/stdc++.h> 
int maximumProfit(vector<int> &prices)
{
    int p=0,buy=prices[0];
    for(int i=1;i<prices.size();i++)
    {
        if(prices[i]-buy>p)
            p=prices[i]-buy;
        if(prices[i]<buy)
            buy=prices[i];
    }
    return p;
}