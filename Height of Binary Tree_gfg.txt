class Solution{
    public:
    //Function to find the height of a binary tree.
    int height(struct Node* node)
    {
        if(node==NULL)
            return 0;
        int h=0;
        queue<pair<Node*,int>> q;
        q.push(make_pair(node,1));
        while(!q.empty())
        {
            int size=q.size();
            for(int j=0;j<size;j++)
            {
                auto i=q.front();
                struct Node *t=i.first;
                int k=i.second;
                h=max(h,k);
                q.pop();
                
                if(t->left)
                    q.push(make_pair(t->left,k+1));
                
                if(t->right)
                    q.push(make_pair(t->right,k+1));    
                
            }
        }
        return h;
    }
};



 // Approach 2

        if(node==NULL) return 0;
        queue<Node*>q;
        int cnt = 0;
        q.push(node);
        q.push(NULL);

        while(!q.empty())
	{
            Node*temp = q.front();
            q.pop();
            if(temp==NULL)
	    {
                cnt++;
                if(!q.empty())
		{
                    q.push(NULL);
                }
            }
            else
                {
                    if(temp->left)
                    q.push(temp->left);
                    if(temp->right)
                    q.push(temp->right);
                }
        }
        return cnt;