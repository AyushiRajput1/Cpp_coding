//Time complexity--O(N)

class Solution{
    public:
    int check(Node *root)
    {
        int l=0,r=0;
        
        if(root==NULL)
            return 0;
            
        if(root->left)    
            l=check(root->left);//left subtree height
        
        if(root->right)
            r=check(root->right);//right subtree height
    
       if(abs(l-r)>1)
            return -1;
        if(l==-1 || r==-1)//if(subtree unbalanced)
            return -1;
            
        return (max(l,r)+1);    
        
    }
    
    bool isBalanced(Node *root)
    {
        int b=0;
        if(root==NULL)
            return true;
       
        else
        {
            b=check(root);
        }
        if(b==-1)
            return false;
      return true;  
    }
    
};