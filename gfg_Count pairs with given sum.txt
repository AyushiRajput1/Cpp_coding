//time limit exceed
class Solution{   
public:
    int getPairsCount(int arr[], int n, int k) 
    {
        int c=0;
        for(int i=0;i<n;i++)
        {
            for(int j=i+1;j<n;j++)
            {
                if(i!=j && arr[i]+arr[j]==k)
                {   c++;
                    
                }
            }
        }
        return c;
    }
};
-----
class Solution{   
public:
    int getPairsCount(int arr[], int n, int k) 
    {
        int c=0;
        int j=1;
        for(int i=0;i<n-1;)
        {
            
            if(arr[i]+arr[j]==k)
                c++;
            if(j==n-1)
            {   
                i++;
                j=i+1;
                
            }
            else
                j++;
        }
        return c;
    }
};
--------------------------------------------------------------
//optimized

class Solution{   
public:
    int getPairsCount(int arr[], int n, int k) 
    {
        map<int,int> m;
        int c=0;
        for(int i=0;i<n;i++)
            m[arr[i]]++;
            
        for(int i=0;i<n;i++)
        {
            int x=k-arr[i];
            if(m.find(x)!=m.end())
            {
                if(x==arr[i])
                    c+=m[x]-1;
            
                else
                    c+=m[x];
            }
            
        }
        
        return c/2;
    }
};