TC:O(N^2)
SC:O(1)

class Solution{
public:
    vector<int> findTwoElement(vector<int> arr, int n) 
    {
        int m=-1,r=-1;
        sort(arr.begin(),arr.end());
        for(int i=1;i<=n;i++)//O(N)
        {
           if(find(arr.begin(),arr.end(),i)==arr.end())//O(N)
           {
              m=i;
              break;
           }
            
        }

        for(int i=0;i<arr.size()-1;i++)
        {
            if(arr[i]==arr[i+1])
            {
                r=arr[i];
                break;
            }
        }
        return {r,m};
    }
};


-------------------------------------------------------------------
TC:O(N)
SC:O(N)

class Solution{
public:
    vector<int> findTwoElement(vector<int> arr, int n) 
    {
        int m=-1,r=-1;
        vector<int> t(n+1,0);
       
        
        for(int i=0;i<n;i++)
        {
           if(t[arr[i]]==0)
           {
                t[arr[i]]=1;
           }
           else if(t[arr[i]]>=1)
           {
               r=arr[i];
           }
            
        }
        
        for(int i=1;i<=n;i++)
        {
           if(t[i]==0)
           {
               m=i;
               break;
           }
            
        }
        
        return {r,m};
    }
};


-------------------------------------------------------------------
TC:O(N)
SC:O(1)

class Solution{
public:
    vector<int> findTwoElement(vector<int> arr, int n) 
    {
        int m=-1,r=-1,i;
        for (i = 0; i < n; i++) 
        {
            if (arr[abs(arr[i]) - 1] > 0)
                arr[abs(arr[i]) - 1] = -arr[abs(arr[i]) - 1];
        else
            r=abs(arr[i]);
        }

    
    for (i = 0; i < n; i++) 
    {
        if (arr[i] > 0)
            m=(i + 1);
    }
        return {r,m};
    }
};