//unoptimized:Time complexity=O(n^3)

class Solution{
public:
    long long maxSubarraySum(int arr[], int n)
    {
        long long sum=INT_MIN,s=0;
        for(int i=0;i<n;i++)
        {
            for(int j=i;j<n;j++)
            {
               for(int k=i;k<=j;k++)
               	   s+=arr[k];
               
            sum=max(sum,s);
            s=0;
            }
        }
        return sum;
    }
};

//optimized-Kadane's Algo
Time complexity :O(n)
class Solution{
public:
long long maxSubarraySum(int arr[], int n)
    {
        long long sum=arr[0],s=0;
        for(int i=0;i<n;i++)
        {
            s+=arr[i];
            if(sum<s)
                sum=s;
            if(s<0)
                s=0;
        }
        return sum;
    }
};