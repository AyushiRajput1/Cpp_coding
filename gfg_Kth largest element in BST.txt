//Expected Time Complexity: O(N).
//Expected Auxiliary Space: O(H) where H is max recursion stack of height h at a given time.

void inorder(Node *root, int &k,int &n)
{
    if(root==NULL)
    return;
    
    inorder(root->right,k,n);
    k--;
    if(k==0)
    {    
        n=root->data;
        return;
    }
     inorder(root->left,k,n);
        
}
;

// return the Kth largest element in the given BST rooted at 'root'
class Solution
{
    public:
    int kthLargest(Node *root, int k)
    {
        int n=-1;
        inorder(root,k,n);
        return n;
    }
};